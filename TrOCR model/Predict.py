from transformers import VisionEncoderDecoderModel, TrOCRProcessor
from PIL import Image
import torch
import cv2
import matplotlib.pyplot as plt

# === Load model and processor ===
SAVE_DIR = "/content/drive/MyDrive/trocr_brahmi_finetuned"
processor = TrOCRProcessor.from_pretrained(SAVE_DIR)
model = VisionEncoderDecoderModel.from_pretrained(SAVE_DIR)

# === Fix config ===
model.config.decoder_start_token_id = processor.tokenizer.cls_token_id or processor.tokenizer.bos_token_id
model.config.pad_token_id = processor.tokenizer.pad_token_id
device = "cuda" if torch.cuda.is_available() else "cpu"
model.to(device)

# === Predict function ===
def predict_brahmi_label(image_path):
    image = Image.open(image_path).convert("RGB")
    pixel_values = processor(images=image, return_tensors="pt").pixel_values.to(device)

    generated_ids = model.generate(
        pixel_values,
        max_length=4,
        num_beams=1,
        early_stopping=True
    )

    pred_str = processor.batch_decode(generated_ids, skip_special_tokens=True)[0]
    return pred_str.strip()
label_map = {
    0: 'роХ', 1: 'ро░', 2: 'ро▒', 3: 'рой', 4: 'роЮ', 5: 'рои', 6: 'роЖ', 7: 'ро╡', 8: 'ро▓',
    9: 'рог', 10: 'род', 11: 'рок', 12: 'роо', 13: 'рокро┐', 14: 'рокрпВ', 15: 'родро┐',
    16: 'ро┤', 17: 'родрпБ', 18: 'роп', 19: 'ропрпБ', 20: 'ройрпБ', 21: 'роиро┐',
    22: 'ройрпВ', 23: 'роО', 24: 'роЙ', 25: 'роУ', 26: 'ро╡рпВ',27:'', 28:'рпЖ', 29:'роХрпБ', 30:'роР', 31:'роТ', 32:'ро░ро┐', 33:'ропро┐', 34:'ро│рпБ', 35:'ро▓ро┐', 36:'роЯ', 37:'ро░рпБ', 38:'ро▓рпБ',39:'ро│',40:'ройро┐',41:'роЬро┐'}

# === Predict on an image ===
test_image_path = "/content/v6.jpeg"
plt.imshow(cv2.imread(test_image_path))
predicted_label = predict_brahmi_label(test_image_path)
print("ЁЯУМ Predicted Subfolder Name: ",label_map[int(predicted_label[:2])])
